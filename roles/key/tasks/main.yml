# vim: set ft=yaml ts=2 expandtab:
---

- name: assertions
  assert:
    that:
    - key_dir|default(tls_default_key_dir) is defined
    - alias is defined
    - key_size is defined
    - key_type in ['RSA']

- debug:
    var: alias
  tags:
  - never
  - debug

- name: directory for {{ alias }} is present
  when:
  - key_dir is defined or alias|dirname|length > 0
  file:
    path: "{{ key_dir|default(tls_default_key_dir) }}/{{ alias|dirname }}"
    state: directory
    recurse: true

# for now only implemented for RSA keys
#
- name: check if key does exist
  command: openssl rsa -in {{ key_dir|default(tls_default_key_dir) }}/{{ alias }}.key
  changed_when: false
  failed_when: false
  no_log: true
  register: _key_exists

- name: debug _key_exists
  debug: var=_key_exists
  no_log: true
  tags:
  - never
  - debug

- name: get key if it already exist
  command: openssl rsa -in {{ key_dir|default(tls_default_key_dir) }}/{{ alias }}.key
  when: _key_exists.rc == 0
  changed_when: false
  no_log: true
  register: _existing_key_content

- name: debug _key_content
  debug: var=_existing_key_content
  no_log: true
  tags:
  - never
  - debug

- name: generate key for {{ alias }}
  command: openssl genrsa {{ key_size }}
  when:
  - _key_exists.rc != 0
  no_log: true
  run_once: "{{ true if one_key_for_all|bool() else false }}"
  register: _key_content

- name: debug _key_content
  debug: var=_key_content
  no_log: true
  tags:
  - never
  - debug

- name: "key {{ alias }} is present"
  copy:
    content: "{{ _key_content.stdout|default(_existing_key_content.stdout) }}"
    dest: "{{ key_dir|default(tls_default_key_dir) }}/{{ alias }}.key"
    force: false

- name: verify key {{ alias }}
  changed_when: false
  no_log: true
  command: openssl rsa -in {{ key_dir|default(tls_default_key_dir) }}/{{ alias }}.key

...
