# vim: set ft=yaml ts=2 expandtab:
---

- name: assertions
  assert:
    that:
      - chain|type_debug == 'list'
      - src is defined
      - alias is defined

- name: certificate for {{ alias }} does exist
  copy:
    src: "{{ playbook_dir }}/{{ cert }}"
    dest: "{{ cert_dir|default(tls_default_cert_dir) }}/{{ alias }}.cert"
    mode: 00644
    backup: true
  notify: check for changed cert

- name: root certificate for {{ alias }} does exist
  copy:
    src: "{{ playbook_dir }}/{{ root }}"
    dest: "{{ cert_dir|default(tls_default_cert_dir) }}/{{ alias }}.root.cert"
    backup: true

- debug: var=key
  no_log: true
  tags:
    - never
    - debug

- name: managed key for {{ alias }} does exist
  no_log: true
  when: key is defined
  copy:
    src: "{{ playbook_dir }}/{{ key }}"
    dest: "{{ cert_dir|default(tls_default_cert_dir) }}/{{ alias }}.key"
    mode: g-rwx,o-rwx
    backup: true
  notify: check for changed key

- name: unmanaged key for {{ alias }}
  when: remote_key is defined
  block:
    - name: key does exist
      copy:
        src: "{{ cert_dir|default(tls_default_cert_dir) }}/{{ remote_key }}"
        dest: "{{ cert_dir|default(tls_default_cert_dir) }}/{{ alias }}.key"
        remote_src: true
        backup: true
      notify: check for changed key

    - name: read in key
      no_log: true
      command: cat "{{ cert_dir|default(tls_default_cert_dir) }}/{{ remote_key }}.key"
      check_mode: false
      register: __key

- name: pem file for {{ alias }} does exist
  no_log: true
  template:
    src: pem.j2
    dest: "{{ key_dir|default(tls_default_private_dir }}/{{ alias }}.pem"
    mode: 00600
    backup: true
  notify: check for changed private pem

- name: chain file for {{ alias }} does exist
  template:
    src: chain.j2
    dest: "{{ cert_dir|default(tls_default_cert_dir }}/{{ alias }}.chain.pem"
    mode: 0644
    backup: true

...
