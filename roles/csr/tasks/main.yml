# vim: set ft=yaml ts=2 expandtab:
---

- name: assertions
  assert:
    that:
    - key_file|default(tls_default_key_dir + '/' + alias + '.key') is defined
    - csr_dir|default(tls_default_cert_dir) is defined
    - alias is defined

- name: assert that certificate info is present
  assert:
    that:
    - x509_cn is defined

- name: check x509_sans
  when: x509_sans is defined
  block:

  - name: assert that SANs are a list
    assert:
      that:
      - x509_sans|type_debug == 'list'

  - name: check x509_sans
    with_items: "{{ x509_sans }}"
    assert:
      that:
      - x509_cn != item

- name: assertions for x509_extended_key_usage
  when: x509_extended_key_usage is defined
  block:

  - name: x509_extended_key_usage is a list
    assert:
      that:
      - x509_extended_key_usage|type_debug == 'list'

  - name: x509_extended_key_usage is valid
    with_items: "{{ x509_extended_key_usage }}"
    assert:
      that:
      - item in openssl_extended_key_usages

- name: directory for {{ alias }} does exist
  when:
  - csr_dir is defined or alias|dirname|length > 0
  file:
    path: "{{ csr_dir|default(tls_default_cert_dir) }}/{{ alias|dirname }}"
    state: directory
    mode: go+r
  run_once: "{{ true if one_key_for_all|bool() else false }}"

- name: config for {{ alias }} is present
  with_first_found:
    - "{{ csr_config_file|default(omit) }}"
    - csr.cnf.j2
  template:
    src: "{{ item }}"
    dest: "{{ csr_dir|default(tls_default_cert_dir) }}/{{ alias }}.cnf"
    mode: go+r

- name: CSR for {{ alias }} is present (existing will be overwritten)
  when: csr_overwrite is defined
  command: openssl req -new -utf8 -key {{ key_dir|default(tls_default_key_dir) + '/' + key_file|default(alias + '.key') }} -out {{ csr_dir|default(tls_default_cert_dir) }}/{{ alias }}.csr -config {{ csr_dir|default(tls_default_cert_dir) }}/{{ alias }}.cnf # noqa 204
  run_once: "{{ true if one_key_for_all|bool() else false }}"
  notify: print CSR

- name: CSR for {{ alias }} is present
  when: csr_overwrite is not defined
  command: openssl req -new -utf8 -key {{ key_dir|default(tls_default_key_dir) + '/' + key_file|default(alias + '.key') }} -out {{ csr_dir|default(tls_default_cert_dir) }}/{{ alias }}.csr -config {{ csr_dir|default(tls_default_cert_dir) }}/{{ alias }}.cnf # noqa 204
  args:
    creates: "{{ csr_dir|default(tls_default_cert_dir) }}/{{ alias }}.csr"
  run_once: "{{ true if one_key_for_all|bool() else false }}"
  notify: print CSR

- name: CSR matches key
  include_role:
    name: mafalb.tls.verify
  vars:
    csr: "{{ csr_dir|default(tls_default_cert_dir) }}/{{ alias }}.csr"
    key: "{{ key_dir|default(tls_default_key_dir) + '/' + key_file|default(alias + '.key') }}"
  run_once: "{{ true if one_key_for_all|bool() else false }}"

...
