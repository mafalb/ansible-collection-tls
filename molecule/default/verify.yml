# vim: set ft=yaml ts=2 expandtab:
---

- name: Verify key on cluster
  hosts: all
  environment:
    http_proxy: "{{ lookup('env', 'http_proxy') }}"
    https_proxy: "{{ lookup('env', 'https_proxy') }}"
    no_proxy: "{{ lookup('env', 'no_proxy') }}"

  roles:

  - name: mafalb.tls.cfg

  tasks:

  - name: assertions
    assert:
      that:
      - ansible_play_hosts|length == 2


  - name: create tmp directory
    delegate_to: localhost
    tempfile:
      state: directory
      prefix: tlskeys_cluster_
    register: _tlskeys
    run_once: true

  - name: debug tls_default_key dir
    debug: var=tls_default_key_dir

  - name: stat cluster key
    stat:
      path: "{{ tls_default_key_dir }}/clusterkey.example.com.key"

  - name: fetch cluster key
    fetch:
      src: "{{ tls_default_key_dir }}/clusterkey.example.com.key"
      dest: "{{ _tlskeys.path }}/{{ inventory_hostname }}"
      flat: true
    throttle: 1

  - name: diff keys
    delegate_to: localhost
    shell: diff -u *
    changed_when: false
    args:
      chdir: "{{ _tlskeys.path }}"

- name: Verify key on non cluster
  hosts: all
  environment:
    http_proxy: "{{ lookup('env', 'http_proxy') }}"
    https_proxy: "{{ lookup('env', 'https_proxy') }}"
    no_proxy: "{{ lookup('env', 'no_proxy') }}"

  roles:

  - name: mafalb.tls.cfg

  tasks:

  - name: assertions
    assert:
      that:
      - ansible_play_hosts|length == 2

  - name: create tmp directory
    delegate_to: localhost
    tempfile:
      state: directory
      prefix: tlskeys_noncluster_
    register: _tlskeys
    run_once: true

  - name: debug tls_default_key dir
    debug: var=tls_default_key_dir

  - name: stat non cluster key
    stat:
      path: "{{ tls_default_key_dir }}/nonclusterkey.example.com.key"

  - name: fetch non cluster key
    fetch:
      src: "{{ tls_default_key_dir }}/nonclusterkey.example.com.key"
      dest: "{{ _tlskeys.path }}/{{ inventory_hostname }}"
      flat: true
    throttle: 1

  - name: diff keys
    delegate_to: localhost
    shell: diff -u *
    changed_when: false
    register: _diff
    failed_when: _diff.rc == 0
    args:
      chdir: "{{ _tlskeys.path }}"

- name: Verify key and csr
  hosts: ci_group
  environment:
    http_proxy: "{{ lookup('env', 'http_proxy') }}"
    https_proxy: "{{ lookup('env', 'https_proxy') }}"
    no_proxy: "{{ lookup('env', 'no_proxy') }}"

  roles:

  - name: OS specific config
    role: mafalb.tls.cfg

  - name: verify test1.example.com-20200114
    role: mafalb.tls.verify
    csr: "{{ tls_default_cert_dir }}/test1.example.com-20200114.csr"
    key: "{{ tls_default_key_dir }}/test1.example.com-20200114.key"

  - name: verify another_keydir/test2.example.com-20200114
    role: mafalb.tls.verify
    csr: "{{ tls_default_cert_dir }}/another_csrdir/test2.example.com-20200114.csr"
    key: "{{ tls_default_key_dir }}/another_keydir/test2.example.com-20200114.key"

  - name: verify test3.example.com-20200114
    role: mafalb.tls.verify
    csr: /tmp/another/csrdir/test3.example.com-20200114.csr
    key: /tmp/test3.example.com-20200114.key

  - name: verify key/blubb/test4.example.com-20200114
    role: mafalb.tls.verify
    csr: "{{ tls_default_cert_dir }}/test4.example.com-20200114.csr"
    key: /tmp/key/blubb/test4.example.com-20200114.key

- name: Verify CA
  hosts: all
  environment:
    http_proxy: "{{ lookup('env', 'http_proxy') }}"
    https_proxy: "{{ lookup('env', 'https_proxy') }}"
    no_proxy: "{{ lookup('env', 'no_proxy') }}"

  roles:

  - name: verify root_ca_1
    role: mafalb.tls.verify
    csr: /tmp/root_ca_1/root_ca_1.csr
    key: /tmp/root_ca_1/root_ca_1.key
    cert: /tmp/root_ca_1/root_ca_1.cert

  - name: verify signing_ca_1
    role: mafalb.tls.verify
    csr: /tmp/signing_ca_1/signing_ca_1.csr
    key: /tmp/signing_ca_1/signing_ca_1.key
    cert: /tmp/signing_ca_1/signing_ca_1.cert


- name: Verify test1.example.com
  hosts: ci_group
  environment:
    http_proxy: "{{ lookup('env', 'http_proxy') }}"
    https_proxy: "{{ lookup('env', 'https_proxy') }}"
    no_proxy: "{{ lookup('env', 'no_proxy') }}"

  pre_tasks:

  - name: check key in privatepem
    loop:
    - test1_1.example.com.pem
    - test1.example.com.pem
    changed_when: false
    command: openssl rsa -in {{ tls_default_key_dir }}/{{ item }}

  - name: check absence of privatepem
    loop:
    - test1_2.example.com.pem
    - test1_3.example.com.pem
    changed_when: false
    command: test ! -f {{ tls_default_key_dir }}/{{ item }}

  - name: check presence of cert+chain
    loop:
    - test1_3.example.com.cert+chain.pem
    changed_when: false
    command: test ! -f {{ tls_default_key_dir }}/{{ item }}

  roles:

  - name: verify test1_3.example.com
    role: mafalb.tls.verify
    csr: "{{ tls_default_cert_dir }}/test1.example.com-20200114.csr"
    key: "{{ tls_default_key_dir }}/test1_3.example.com.key"
    cert: "{{ tls_default_cert_dir }}/test1_3.example.com.cert"

  - role: mafalb.tls.certificate
    alias: test1_4.example.com
    state: absent

  - name: verify test1.example.com
    role: mafalb.tls.verify
    csr: "{{ tls_default_cert_dir }}/test1.example.com-20200114.csr"
    key: "{{ tls_default_key_dir }}/test1.example.com.key"
    cert: "{{ tls_default_cert_dir }}/test1.example.com.cert"

  - name: verify test1_1.example.com
    role: mafalb.tls.verify
    csr: "{{ tls_default_cert_dir }}/test1.example.com-20200114.csr"
    key: "{{ tls_default_key_dir }}/test1_1.example.com.key"
    cert: "{{ tls_default_cert_dir }}/test1_1.example.com.cert"

  - name: verify test1_2.example.com
    role: mafalb.tls.verify
    csr: "{{ tls_default_cert_dir }}/test1.example.com-20200114.csr"
    key: "{{ tls_default_key_dir }}/test1_2.example.com.key"
    cert: "{{ tls_default_cert_dir }}/test1_2.example.com.cert"

- name: Verify certificates
  # CentOS 6 is too old for the openssl_certificate_info module
  # cryptography is too old
  hosts: ci_group
  environment:
    http_proxy: "{{ lookup('env', 'http_proxy') }}"
    https_proxy: "{{ lookup('env', 'https_proxy') }}"
    no_proxy: "{{ lookup('env', 'no_proxy') }}"

  tasks:

  - name: get info for certificates
    loop:
    - test1.example.com
    - test3.example.com
    changed_when: false
    openssl_certificate_info:
      path: "{{ tls_default_cert_dir }}/{{ item }}.cert"
    register: _cert_info

  - name: debug dates of certificates
    loop:
    - test1.example.com
    - test3.example.com
    debug:
      var: _cert_info

  - name: debug dates
    loop: "{{ _cert_info.results }}"
    debug:
      msg: "{{ (item.not_after[:-1]|to_datetime('%Y%m%d%H%M%S') - item.not_before[:-1]|to_datetime('%Y%m%d%H%M%S')).days }}"

  - name: assertions for certificates
    loop: "{{ _cert_info.results }}"
    assert:
      that:
      - (item.not_after[:-1]|to_datetime('%Y%m%d%H%M%S') - item.not_before[:-1]|to_datetime('%Y%m%d%H%M%S')).days == 825

...
